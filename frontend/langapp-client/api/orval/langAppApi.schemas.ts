/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * LangApp.Api
 * OpenAPI spec version: 1.0
 */
export interface ActivityDetailsDto {
  activityType: string;
}

export type ActivityDtoDetails =
  | ActivityDetailsDto
  | MultipleChoiceActivityDetailsDto
  | MultipleChoiceActivityRestrictedDetailsDto
  | FillInTheBlankActivityDetailsDto
  | FillInTheBlankActivityRestrictedDetailsDto
  | PronunciationActivityDetailsDto
  | QuestionActivityDetailsDto
  | QuestionActivityRestrictedDetailsDto
  | WritingActivityDetailsDto;

export interface ActivityDto {
  id?: string;
  maxScore?: number;
  details?: ActivityDtoDetails;
}

export interface ActivitySubmissionDetailsDto {
  activityType: string;
}

export type ActivitySubmissionDtoDetails =
  | ActivitySubmissionDetailsDto
  | MultipleChoiceActivitySubmissionDetailsDto
  | PronunciationActivitySubmissionDetailsDto
  | FillInTheBlankActivitySubmissionDetailsDto
  | QuestionActivitySubmissionDetailsDto
  | WritingActivitySubmissionDetailsDto;

export interface ActivitySubmissionDto {
  id?: string;
  activityId?: string;
  details?: ActivitySubmissionDtoDetails;
  status?: GradeStatus;
  grade?: SubmissionGradeDto;
  /** @nullable */
  failureReason?: string | null;
}

export interface AssignmentDto {
  id?: string;
  name?: string;
  /** @nullable */
  description?: string | null;
  authorId?: string;
  studyGroupId?: string;
  dueTime?: string;
  maxScore?: number;
  submitted?: boolean;
  activities?: ActivityDto[];
}

export interface AssignmentSlimDto {
  id?: string;
  name?: string;
  /** @nullable */
  description?: string | null;
  authorId?: string;
  studyGroupId?: string;
  dueTime?: string;
  maxScore?: number;
  submitted?: boolean;
  activityCount?: number;
}

export interface AssignmentSlimDtoPagedResult {
  items?: AssignmentSlimDto[];
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
}

export interface AssignmentSubmissionDto {
  id?: string;
  assignmentId?: string;
  studentId?: string;
  studentName?: string;
  /** @nullable */
  studentPictureUrl?: string | null;
  submittedAt?: string;
  status?: GradeStatus;
  score?: number;
  activitySubmissions?: ActivitySubmissionDto[];
}

export interface AssignmentSubmissionDtoPagedResult {
  items?: AssignmentSubmissionDto[];
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
}

export interface AssignmentSubmissionInfoDto {
  submissionId?: string;
  studentId?: string;
  studentName?: string;
  /** @nullable */
  studentPictureUrl?: string | null;
}

export interface AssignmentSubmissionsStatisticsDto {
  assignmentId?: string;
  submissionCount?: number;
  pendingCount?: number;
  failedCount?: number;
  completedCount?: number;
  needsReviewCount?: number;
  submissions?: AssignmentSubmissionInfoDto[];
}

export type CreateActivityDtoDetails =
  | ActivityDetailsDto
  | MultipleChoiceActivityDetailsDto
  | MultipleChoiceActivityRestrictedDetailsDto
  | FillInTheBlankActivityDetailsDto
  | FillInTheBlankActivityRestrictedDetailsDto
  | PronunciationActivityDetailsDto
  | QuestionActivityDetailsDto
  | QuestionActivityRestrictedDetailsDto
  | WritingActivityDetailsDto;

export interface CreateActivityDto {
  maxScore?: number;
  details?: CreateActivityDtoDetails;
}

export type CreateActivitySubmissionDtoDetails =
  | ActivitySubmissionDetailsDto
  | MultipleChoiceActivitySubmissionDetailsDto
  | PronunciationActivitySubmissionDetailsDto
  | FillInTheBlankActivitySubmissionDetailsDto
  | QuestionActivitySubmissionDetailsDto
  | WritingActivitySubmissionDetailsDto;

export interface CreateActivitySubmissionDto {
  activityId?: string;
  details?: CreateActivitySubmissionDtoDetails;
}

export interface CreateAssignmentRequest {
  name?: string;
  /** @nullable */
  description?: string | null;
  groupId?: string;
  dueDate?: string;
  activities?: CreateActivityDto[];
}

export interface CreateAssignmentSubmissionRequest {
  activitySubmissionDtos?: CreateActivitySubmissionDto[];
}

export interface CreatePostCommentRequest {
  content?: string;
}

export interface CreatePostRequest {
  groupId?: string;
  type?: PostType;
  title?: string;
  content?: string;
  /** @nullable */
  media?: string[] | null;
}

export interface CreateStudyGroupRequest {
  name?: string;
  language?: string;
}

export interface EditPostCommentRequest {
  content?: string;
}

export interface EditPostRequest {
  content?: string;
  /** @nullable */
  media?: string[] | null;
}

export interface EvaluatePronunciationSubmissionRequest {
  fileUri?: string;
}

export type FillInTheBlankActivityDetailsDtoAllOf = {
  templateText?: string;
  answers?: FillInTheBlankAnswerDto[];
};

export type FillInTheBlankActivityDetailsDtoActivityType =
  (typeof FillInTheBlankActivityDetailsDtoActivityType)[keyof typeof FillInTheBlankActivityDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FillInTheBlankActivityDetailsDtoActivityType = {
  FillInTheBlank: 'FillInTheBlank',
} as const;

export type FillInTheBlankActivityDetailsDto = Omit<
  ActivityDetailsDto & FillInTheBlankActivityDetailsDtoAllOf,
  'activityType'
> & {
  activityType: FillInTheBlankActivityDetailsDtoActivityType;
};

export type FillInTheBlankActivityRestrictedDetailsDtoAllOf = {
  templateText?: string;
};

export type FillInTheBlankActivityRestrictedDetailsDtoActivityType =
  (typeof FillInTheBlankActivityRestrictedDetailsDtoActivityType)[keyof typeof FillInTheBlankActivityRestrictedDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FillInTheBlankActivityRestrictedDetailsDtoActivityType = {
  FillInTheBlankRestricted: 'FillInTheBlankRestricted',
} as const;

export type FillInTheBlankActivityRestrictedDetailsDto = Omit<
  ActivityDetailsDto & FillInTheBlankActivityRestrictedDetailsDtoAllOf,
  'activityType'
> & {
  activityType: FillInTheBlankActivityRestrictedDetailsDtoActivityType;
};

export type FillInTheBlankActivitySubmissionDetailsDtoAllOf = {
  answers?: FillInTheBlankSubmissionAnswerDto[];
};

export type FillInTheBlankActivitySubmissionDetailsDtoActivityType =
  (typeof FillInTheBlankActivitySubmissionDetailsDtoActivityType)[keyof typeof FillInTheBlankActivitySubmissionDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FillInTheBlankActivitySubmissionDetailsDtoActivityType = {
  FillInTheBlank: 'FillInTheBlank',
} as const;

export type FillInTheBlankActivitySubmissionDetailsDto = Omit<
  ActivitySubmissionDetailsDto & FillInTheBlankActivitySubmissionDetailsDtoAllOf,
  'activityType'
> & {
  activityType: FillInTheBlankActivitySubmissionDetailsDtoActivityType;
};

export interface FillInTheBlankAnswerDto {
  acceptableAnswers?: string[];
}

export interface FillInTheBlankSubmissionAnswerDto {
  index?: number;
  answer?: string;
}

export interface FullNameDto {
  firstName?: string;
  lastName?: string;
}

export interface FullNameModel {
  firstName?: string;
  lastName?: string;
}

export type GradeStatus = (typeof GradeStatus)[keyof typeof GradeStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GradeStatus = {
  Pending: 'Pending',
  Completed: 'Completed',
  Failed: 'Failed',
  NeedsReview: 'NeedsReview',
} as const;

export interface Login {
  username?: string;
  password?: string;
}

export interface MembersBodyRequestModel {
  members?: string[];
}

export type MultipleChoiceActivityDetailsDtoAllOf = {
  questions?: MultipleChoiceQuestionDto[];
};

export type MultipleChoiceActivityDetailsDtoActivityType =
  (typeof MultipleChoiceActivityDetailsDtoActivityType)[keyof typeof MultipleChoiceActivityDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MultipleChoiceActivityDetailsDtoActivityType = {
  MultipleChoice: 'MultipleChoice',
} as const;

export type MultipleChoiceActivityDetailsDto = Omit<
  ActivityDetailsDto & MultipleChoiceActivityDetailsDtoAllOf,
  'activityType'
> & {
  activityType: MultipleChoiceActivityDetailsDtoActivityType;
};

export type MultipleChoiceActivityRestrictedDetailsDtoAllOf = {
  questions?: MultipleChoiceRestrictedQuestionDto[];
};

export type MultipleChoiceActivityRestrictedDetailsDtoActivityType =
  (typeof MultipleChoiceActivityRestrictedDetailsDtoActivityType)[keyof typeof MultipleChoiceActivityRestrictedDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MultipleChoiceActivityRestrictedDetailsDtoActivityType = {
  MultipleChoiceRestricted: 'MultipleChoiceRestricted',
} as const;

export type MultipleChoiceActivityRestrictedDetailsDto = Omit<
  ActivityDetailsDto & MultipleChoiceActivityRestrictedDetailsDtoAllOf,
  'activityType'
> & {
  activityType: MultipleChoiceActivityRestrictedDetailsDtoActivityType;
};

export type MultipleChoiceActivitySubmissionDetailsDtoAllOf = {
  answers?: MultipleChoiceSubmissionAnswerDto[];
};

export type MultipleChoiceActivitySubmissionDetailsDtoActivityType =
  (typeof MultipleChoiceActivitySubmissionDetailsDtoActivityType)[keyof typeof MultipleChoiceActivitySubmissionDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MultipleChoiceActivitySubmissionDetailsDtoActivityType = {
  MultipleChoice: 'MultipleChoice',
} as const;

export type MultipleChoiceActivitySubmissionDetailsDto = Omit<
  ActivitySubmissionDetailsDto & MultipleChoiceActivitySubmissionDetailsDtoAllOf,
  'activityType'
> & {
  activityType: MultipleChoiceActivitySubmissionDetailsDtoActivityType;
};

export interface MultipleChoiceQuestionDto {
  question?: string;
  options?: string[];
  correctOptionIndex?: number;
}

export interface MultipleChoiceRestrictedQuestionDto {
  question?: string;
  options?: string[];
}

export interface MultipleChoiceSubmissionAnswerDto {
  questionIndex?: number;
  chosenOptionIndex?: number;
}

export interface PostCommentDto {
  id?: string;
  authorId?: string;
  authorName?: string;
  /** @nullable */
  authorProfilePicture?: string | null;
  content?: string;
  createdAt?: string;
  /** @nullable */
  editedAt?: string | null;
}

export interface PostDto {
  id?: string;
  type?: PostType;
  authorId?: string;
  authorName?: string;
  /** @nullable */
  authorProfilePicture?: string | null;
  groupId?: string;
  title?: string;
  content?: string;
  createdAt?: string;
  isEdited?: boolean;
  comments?: PostCommentDto[];
  media?: string[];
}

export interface PostSlimDto {
  id?: string;
  authorId?: string;
  authorName?: string;
  type?: PostType;
  title?: string;
  contentPreview?: string;
  createdAt?: string;
  isEdited?: boolean;
  mediaCount?: number;
}

export interface PostSlimDtoPagedResult {
  items?: PostSlimDto[];
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
}

export type PostType = (typeof PostType)[keyof typeof PostType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostType = {
  Discussion: 'Discussion',
  Resource: 'Resource',
} as const;

export type PronunciationActivityDetailsDtoAllOf = {
  language?: string;
  referenceText?: string;
};

export type PronunciationActivityDetailsDtoActivityType =
  (typeof PronunciationActivityDetailsDtoActivityType)[keyof typeof PronunciationActivityDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PronunciationActivityDetailsDtoActivityType = {
  Pronunciation: 'Pronunciation',
} as const;

export type PronunciationActivityDetailsDto = Omit<
  ActivityDetailsDto & PronunciationActivityDetailsDtoAllOf,
  'activityType'
> & {
  activityType: PronunciationActivityDetailsDtoActivityType;
};

export type PronunciationActivitySubmissionDetailsDtoAllOf = {
  recordingUrl?: string;
};

export type PronunciationActivitySubmissionDetailsDtoActivityType =
  (typeof PronunciationActivitySubmissionDetailsDtoActivityType)[keyof typeof PronunciationActivitySubmissionDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PronunciationActivitySubmissionDetailsDtoActivityType = {
  Pronunciation: 'Pronunciation',
} as const;

export type PronunciationActivitySubmissionDetailsDto = Omit<
  ActivitySubmissionDetailsDto & PronunciationActivitySubmissionDetailsDtoAllOf,
  'activityType'
> & {
  activityType: PronunciationActivitySubmissionDetailsDtoActivityType;
};

export type QuestionActivityDetailsDtoAllOf = {
  question?: string;
  answers?: string[];
  maxLength?: number;
};

export type QuestionActivityDetailsDtoActivityType =
  (typeof QuestionActivityDetailsDtoActivityType)[keyof typeof QuestionActivityDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const QuestionActivityDetailsDtoActivityType = {
  Question: 'Question',
} as const;

export type QuestionActivityDetailsDto = Omit<
  ActivityDetailsDto & QuestionActivityDetailsDtoAllOf,
  'activityType'
> & {
  activityType: QuestionActivityDetailsDtoActivityType;
};

export type QuestionActivityRestrictedDetailsDtoAllOf = {
  question?: string;
  maxLength?: number;
};

export type QuestionActivityRestrictedDetailsDtoActivityType =
  (typeof QuestionActivityRestrictedDetailsDtoActivityType)[keyof typeof QuestionActivityRestrictedDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const QuestionActivityRestrictedDetailsDtoActivityType = {
  QuestionRestricted: 'QuestionRestricted',
} as const;

export type QuestionActivityRestrictedDetailsDto = Omit<
  ActivityDetailsDto & QuestionActivityRestrictedDetailsDtoAllOf,
  'activityType'
> & {
  activityType: QuestionActivityRestrictedDetailsDtoActivityType;
};

export type QuestionActivitySubmissionDetailsDtoAllOf = {
  answer?: string;
};

export type QuestionActivitySubmissionDetailsDtoActivityType =
  (typeof QuestionActivitySubmissionDetailsDtoActivityType)[keyof typeof QuestionActivitySubmissionDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const QuestionActivitySubmissionDetailsDtoActivityType = {
  Question: 'Question',
} as const;

export type QuestionActivitySubmissionDetailsDto = Omit<
  ActivitySubmissionDetailsDto & QuestionActivitySubmissionDetailsDtoAllOf,
  'activityType'
> & {
  activityType: QuestionActivitySubmissionDetailsDtoActivityType;
};

export interface Refresh {
  refreshToken?: string;
}

export interface Register {
  username?: string;
  email?: string;
  fullName?: FullNameModel;
  /** @nullable */
  pictureUrl?: string | null;
  role?: UserRole;
  password?: string;
}

export interface RequestPasswordReset {
  email?: string;
}

export interface ResetPassword {
  email?: string;
  token?: string;
  newPassword?: string;
}

export interface StudyGroupDto {
  id?: string;
  name?: string;
  language?: string;
  owner?: StudyGroupOwnerDto;
  members?: StudyGroupMemberDto[];
}

export interface StudyGroupInfoRequestModel {
  name?: string;
}

export interface StudyGroupMemberDto {
  id?: string;
  fullName?: FullNameDto;
  /** @nullable */
  pictureUrl?: string | null;
}

export interface StudyGroupOwnerDto {
  id?: string;
  fullName?: FullNameDto;
  /** @nullable */
  pictureUrl?: string | null;
}

export interface StudyGroupSlimDto {
  id?: string;
  name?: string;
  language?: string;
}

export interface StudyGroupSlimDtoPagedResult {
  items?: StudyGroupSlimDto[];
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
}

export interface SubmissionGradeDto {
  scorePercentage?: number;
  feedback?: string;
}

export interface TokenResponse {
  accessToken?: string;
  refreshToken?: string;
}

export interface UpdateUserInfoRequest {
  username?: string;
  fullName?: FullNameModel;
  /** @nullable */
  pictureUrl?: string | null;
}

export interface UserDto {
  id?: string;
  username?: string;
  fullName?: FullNameDto;
  /** @nullable */
  pictureUrl?: string | null;
  role?: UserRole;
}

export interface UserDtoPagedResult {
  items?: UserDto[];
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
}

export interface UserGroupSubmissionDto {
  assignment?: AssignmentDto;
  submission?: AssignmentSubmissionDto;
}

export interface UserGroupSubmissionDtoPagedResult {
  items?: UserGroupSubmissionDto[];
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
}

export type UserRole = (typeof UserRole)[keyof typeof UserRole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserRole = {
  Teacher: 'Teacher',
  Student: 'Student',
} as const;

export type WritingActivityDetailsDtoAllOf = {
  prompt?: string;
  maxWords?: number;
};

export type WritingActivityDetailsDtoActivityType =
  (typeof WritingActivityDetailsDtoActivityType)[keyof typeof WritingActivityDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const WritingActivityDetailsDtoActivityType = {
  Writing: 'Writing',
} as const;

export type WritingActivityDetailsDto = Omit<
  ActivityDetailsDto & WritingActivityDetailsDtoAllOf,
  'activityType'
> & {
  activityType: WritingActivityDetailsDtoActivityType;
};

export type WritingActivitySubmissionDetailsDtoAllOf = {
  text?: string;
};

export type WritingActivitySubmissionDetailsDtoActivityType =
  (typeof WritingActivitySubmissionDetailsDtoActivityType)[keyof typeof WritingActivitySubmissionDetailsDtoActivityType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const WritingActivitySubmissionDetailsDtoActivityType = {
  Writing: 'Writing',
} as const;

export type WritingActivitySubmissionDetailsDto = Omit<
  ActivitySubmissionDetailsDto & WritingActivitySubmissionDetailsDtoAllOf,
  'activityType'
> & {
  activityType: WritingActivitySubmissionDetailsDtoActivityType;
};

export type GetAssignmentsByGroupParams = {
  ShowSubmitted?: boolean;
  pageNumber?: number;
  pageSize?: number;
};

export type GetAssignmentsByUserParams = {
  showSubmitted: boolean;
  pageNumber?: number;
  pageSize?: number;
};

export type GetStudyGroupForUserParams = {
  pageNumber?: number;
  pageSize?: number;
};

export type GetPostsByGroupParams = {
  pageNumber?: number;
  pageSize?: number;
};

export type GetSubmissionsByAssignmentParams = {
  pageNumber?: number;
  pageSize?: number;
};

export type GetSubmissionsByUserGroupParams = {
  pageNumber?: number;
  pageSize?: number;
};

export type SearchUsersParams = {
  SearchTerm: string;
  pageNumber?: number;
  pageSize?: number;
};
